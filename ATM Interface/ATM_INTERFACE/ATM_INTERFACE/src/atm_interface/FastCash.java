/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package atm_interface;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import project.ConnectionProvider;

/**
 *
 * @author Owner
 */
public class FastCash extends javax.swing.JFrame {

    /**
     * Creates new form Transaction
     */
    int x,y,cardno;
    public FastCash() {
        initComponents();
        jp.setBackground(new Color(58,115,184));
        
    }
     public FastCash(int cardno) {
        initComponents();
        this.cardno = cardno;
        
    }
      long Oldbalance;
    private void getBalance()
    {
        
        try
           {
                Connection con = ConnectionProvider.getcon();
                Statement st = con.createStatement();
                String query = "select * from Customer where Card= '"+cardno+"'";
                ResultSet rs = st.executeQuery(query);
                
                 if(rs.next())
                {
                    Oldbalance = rs.getLong(4);
                    balance.setText("Rs " + Oldbalance);
                    
                }
                
                
                
           }
           catch(Exception e)
           {
               JOptionPane.showMessageDialog(null, "Error" ,"Error" , JOptionPane.ERROR);
           }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jp = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        hundred = new javax.swing.JButton();
        fivehundred = new javax.swing.JButton();
        fivethousand = new javax.swing.JButton();
        onethousand = new javax.swing.JButton();
        tenthousand = new javax.swing.JButton();
        twothousand = new javax.swing.JButton();
        balance = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jp.setBackground(new java.awt.Color(153, 204, 255));

        jPanel2.setBackground(new java.awt.Color(0, 51, 102));
        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel2MouseDragged(evt);
            }
        });
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel2MousePressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("X");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jPanel3.setBackground(new java.awt.Color(0, 51, 102));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("FAST CASH");

        hundred.setBackground(new java.awt.Color(153, 153, 255));
        hundred.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        hundred.setForeground(new java.awt.Color(255, 255, 255));
        hundred.setText("Rs. 100");
        hundred.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hundredActionPerformed(evt);
            }
        });

        fivehundred.setBackground(new java.awt.Color(153, 153, 255));
        fivehundred.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        fivehundred.setForeground(new java.awt.Color(255, 255, 255));
        fivehundred.setText("Rs. 500");
        fivehundred.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fivehundredActionPerformed(evt);
            }
        });

        fivethousand.setBackground(new java.awt.Color(153, 153, 255));
        fivethousand.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        fivethousand.setForeground(new java.awt.Color(255, 255, 255));
        fivethousand.setText("Rs. 5000");
        fivethousand.setMaximumSize(new java.awt.Dimension(111, 27));
        fivethousand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fivethousandActionPerformed(evt);
            }
        });

        onethousand.setBackground(new java.awt.Color(153, 153, 255));
        onethousand.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        onethousand.setForeground(new java.awt.Color(255, 255, 255));
        onethousand.setText("Rs. 1000");
        onethousand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onethousandActionPerformed(evt);
            }
        });

        tenthousand.setBackground(new java.awt.Color(153, 153, 255));
        tenthousand.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        tenthousand.setForeground(new java.awt.Color(255, 255, 255));
        tenthousand.setText("Rs. 10000");
        tenthousand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenthousandActionPerformed(evt);
            }
        });

        twothousand.setBackground(new java.awt.Color(153, 153, 255));
        twothousand.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        twothousand.setForeground(new java.awt.Color(255, 255, 255));
        twothousand.setText("Rs. 2000");
        twothousand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twothousandActionPerformed(evt);
            }
        });

        balance.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        balance.setText("rs");

        javax.swing.GroupLayout jpLayout = new javax.swing.GroupLayout(jp);
        jp.setLayout(jpLayout);
        jpLayout.setHorizontalGroup(
            jpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(110, 110, 110))
            .addGroup(jpLayout.createSequentialGroup()
                .addGroup(jpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(onethousand, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hundred, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fivethousand, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(107, 107, 107)
                        .addGroup(jpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(twothousand, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fivehundred, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tenthousand)))
                    .addGroup(jpLayout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(balance)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jpLayout.setVerticalGroup(
            jpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(balance)
                .addGap(20, 20, 20)
                .addGroup(jpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hundred, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fivehundred, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(onethousand, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(twothousand, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fivethousand, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tenthousand, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jPanel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseDragged
        int xx= evt.getXOnScreen();
        int yy=evt.getYOnScreen();
        this.setLocation(xx-x,yy-y);
    }//GEN-LAST:event_jPanel2MouseDragged

    private void jPanel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_jPanel2MousePressed
    String date ;
    private String getDate()
    {
        Date d = new Date();
        SimpleDateFormat sf = new SimpleDateFormat("dd-MM-yyyy");
        date = sf.format(d);
        return date;
        
        
    }
    private void transac(long amount)
    {
        try
        {
            Connection con = ConnectionProvider.getcon();
            String query = " insert into transaction (Card_No,Type,Amount,Date) values (?,?,?,?)";
            PreparedStatement st = con.prepareStatement(query);
            st.setInt(1, cardno);
            st.setString(2, "Fast Cash");
            st.setLong(3,amount );
            st.setString(4,getDate() );
            
            st.executeUpdate();
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    private void fivehundredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fivehundredActionPerformed
       if(Oldbalance < 500)
        {
            JOptionPane.showMessageDialog(null, "No enough Balance" ,"Warning" , JOptionPane.WARNING_MESSAGE);
        }
         else if(Oldbalance == 0)
        {
            JOptionPane.showMessageDialog(null, "No enough Balance" ,"Warning" , JOptionPane.WARNING_MESSAGE);
        }
        else
        {
             try
            {
                Connection con = ConnectionProvider.getcon();
                String query = "update Customer set Balance = ? where Card = ?";
                PreparedStatement st = con.prepareStatement(query);
                st.setLong(1, Oldbalance - 500 );
                st.setInt(2,cardno);  
                
               if(st.executeUpdate()==1)
               {
                   JOptionPane.showMessageDialog(null, "Cash Withdraw","Withdraw",JOptionPane.INFORMATION_MESSAGE);
                   transac(500);
                   this.dispose();
                   new PIN().setVisible(true);
               }
            }
            catch(Exception e)
            {
                  JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_fivehundredActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        getBalance();
    }//GEN-LAST:event_formComponentShown

    private void hundredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hundredActionPerformed
       
        if(Oldbalance < 100)
        {
            JOptionPane.showMessageDialog(null, "No enough Balance" ,"Warning" , JOptionPane.WARNING_MESSAGE);
        }
         else if(Oldbalance == 0)
        {
            JOptionPane.showMessageDialog(null, "No enough Balance" ,"Warning" , JOptionPane.WARNING_MESSAGE);
        }
        else
        {
             try
            {
                Connection con = ConnectionProvider.getcon();
                String query = "update Customer set Balance = ? where Card = ?";
                PreparedStatement st = con.prepareStatement(query);
                st.setLong(1, Oldbalance - 100 );
                st.setInt(2,cardno);  
                
               if(st.executeUpdate()==1)
               {
                   JOptionPane.showMessageDialog(null, "Cash Withdraw","Withdraw",JOptionPane.INFORMATION_MESSAGE);
                   transac(100);
                   this.dispose();
                   new PIN().setVisible(true);
               }
            }
            catch(Exception e)
            {
                  JOptionPane.showMessageDialog(null, e);
            }
        }
        
    }//GEN-LAST:event_hundredActionPerformed

    private void onethousandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onethousandActionPerformed
       if(Oldbalance < 1000)
        {
            JOptionPane.showMessageDialog(null, "No enough Balance" ,"Warning" , JOptionPane.WARNING_MESSAGE);
        }
         else if(Oldbalance == 0)
        {
            JOptionPane.showMessageDialog(null, "No enough Balance" ,"Warning" , JOptionPane.WARNING_MESSAGE);
        }
        else
        {
             try
            {
                Connection con = ConnectionProvider.getcon();
                String query = "update Customer set Balance = ? where Card = ?";
                PreparedStatement st = con.prepareStatement(query);
                st.setLong(1, Oldbalance - 1000 );
                st.setInt(2,cardno);  
                
               if(st.executeUpdate()==1)
               {
                   JOptionPane.showMessageDialog(null, "Cash Withdraw","Withdraw",JOptionPane.INFORMATION_MESSAGE);
                  transac(1000);
                   this.dispose();
                   new PIN().setVisible(true);
               }
            }
            catch(Exception e)
            {
                  JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_onethousandActionPerformed

    private void twothousandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twothousandActionPerformed
       if(Oldbalance < 2000)
        {
            JOptionPane.showMessageDialog(null, "No enough Balance" ,"Warning" , JOptionPane.WARNING_MESSAGE);
        }
         else if(Oldbalance == 0)
        {
            JOptionPane.showMessageDialog(null, "No enough Balance" ,"Warning" , JOptionPane.WARNING_MESSAGE);
        }
        else
        {
             try
            {
                Connection con = ConnectionProvider.getcon();
                String query = "update Customer set Balance = ? where Card = ?";
                PreparedStatement st = con.prepareStatement(query);
                st.setLong(1, Oldbalance - 2000 );
                st.setInt(2,cardno);  
                
               if(st.executeUpdate()==1)
               {
                   JOptionPane.showMessageDialog(null, "Cash Withdraw","Withdraw",JOptionPane.INFORMATION_MESSAGE);
                  transac(2000);
                   this.dispose();
                   new PIN().setVisible(true);
               }
            }
            catch(Exception e)
            {
                  JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_twothousandActionPerformed

    private void fivethousandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fivethousandActionPerformed
        if(Oldbalance < 5000)
        {
            JOptionPane.showMessageDialog(null, "No enough Balance" ,"Warning" , JOptionPane.WARNING_MESSAGE);
        }
         else if(Oldbalance == 0)
        {
            JOptionPane.showMessageDialog(null, "No enough Balance" ,"Warning" , JOptionPane.WARNING_MESSAGE);
        }
        else
        {
             try
            {
                Connection con = ConnectionProvider.getcon();
                String query = "update Customer set Balance = ? where Card = ?";
                PreparedStatement st = con.prepareStatement(query);
                st.setLong(1, Oldbalance - 5000 );
                st.setInt(2,cardno);  
                
               if(st.executeUpdate()==1)
               {
                   JOptionPane.showMessageDialog(null, "Cash Withdraw","Withdraw",JOptionPane.INFORMATION_MESSAGE);
                  transac(5000);
                   this.dispose();
                   new PIN().setVisible(true);
               }
            }
            catch(Exception e)
            {
                  JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_fivethousandActionPerformed

    private void tenthousandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenthousandActionPerformed
        if(Oldbalance < 10000)
        {
            JOptionPane.showMessageDialog(null, "No enough Balance" ,"Warning" , JOptionPane.WARNING_MESSAGE);
        }
         else if(Oldbalance == 0)
        {
            JOptionPane.showMessageDialog(null, "No enough Balance" ,"Warning" , JOptionPane.WARNING_MESSAGE);
        }
        else
        {
             try
            {
                Connection con = ConnectionProvider.getcon();
                String query = "update Customer set Balance = ? where Card = ?";
                PreparedStatement st = con.prepareStatement(query);
                st.setLong(1, Oldbalance - 10000 );
                st.setInt(2,cardno);  
                
               if(st.executeUpdate()==1)
               {
                   JOptionPane.showMessageDialog(null, "Cash Withdraw","Withdraw",JOptionPane.INFORMATION_MESSAGE);
                  transac(10000);
                   this.dispose();
                   new PIN().setVisible(true);
               }
            }
            catch(Exception e)
            {
                  JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_tenthousandActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FastCash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FastCash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FastCash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FastCash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FastCash().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel balance;
    private javax.swing.JButton fivehundred;
    private javax.swing.JButton fivethousand;
    private javax.swing.JButton hundred;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jp;
    private javax.swing.JButton onethousand;
    private javax.swing.JButton tenthousand;
    private javax.swing.JButton twothousand;
    // End of variables declaration//GEN-END:variables
}
